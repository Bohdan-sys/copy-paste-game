{"version":3,"sources":["components/Header.js","contexts/GridContext/GridPropTypes.js","contexts/GridContext/GridReducer.js","Utils/ArrConvertor.js","Utils/Randomizer.js","contexts/GridContext/GridProvider.js","components/LifeDisplay.js","components/DifficultControl.js","components/Switcher.js","components/LifeControl.js","contexts/TimerContext/TimerReducer.js","contexts/TimerContext/TimerProvider.js","components/Settings.js","components/TimerDisplay.js","components/TimerControl.js","components/Timer.js","components/CopyGrid.js","pages/CopyPage.js","components/PasteGrid.js","pages/PastePage.js","App.js","reportWebVitals.js","index.js"],"names":["Header","children","location","useLocation","Container","maxWidth","className","AppBar","position","color","Tabs","value","pathname","indicatorColor","Tab","component","NavLink","to","exact","label","COPYITEM","PASTEITEM","UPDATEGRID","handlers","gridState","payload","copyGrid","map","arr","item","clicked","pasteGrid","length","curValue","state","gridReducer","action","type","DEFAULT","generateMatrix","count","Array","from","fill","randomDegree","angle","Math","floor","random","GridContext","createContext","GridContextProvider","assignObjects","matrix","id","toString","substring","useState","dif","setDif","initialState","useReducer","dispatch","rotate","setRotate","lifes","setLifes","Provider","grid","copyItem","pasteItem","sign","handleChange","event","target","checked","lifeChanger","LifeDisplay","useContext","leng","i","push","createArr","life","DifficultControl","IconButton","onClick","fontSize","Switcher","Switch","onChange","inputProps","LifeControl","TIMER","START","RESET","timerState","timer","start","timerReducer","TimerContext","React","TimerContextProvider","increment","useRef","formatTime","getSeconds","slice","minutes","getMinutes","getHours","startWatch","current","setInterval","resetWatch","clearInterval","Settings","anchorEl","setAnchorEl","open","Boolean","aria-label","aria-controls","aria-haspopup","currentTarget","disabled","Menu","keepMounted","onClose","PaperProps","style","width","MenuItem","TimerDisplay","TimerControl","Button","variant","Timer","CopyGrid","Grid","container","wrap","index","background","CopyPage","PasteGrid","console","log","transform","size","PastePage","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e3b7c236.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { AppBar, Tabs, Tab, Container } from '@material-ui/core';\r\n\r\nexport const Header = ({ children }) => {\r\n\r\n\r\n\r\n    const location = useLocation()\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className=\"header\">\r\n                <AppBar position=\"relative\" color=\"default\" >\r\n                    <Tabs\r\n                        value={location.pathname}\r\n                        indicatorColor=\"primary\"\r\n                        className=\"tabs\">\r\n                        <Tab component={NavLink} className=\"tabs__link\"\r\n                            to='/copy-paste-game' exact\r\n                            label={<span className=\"caption caption--size_4\">Copy</span>} value={'/copy-paste-game'} />\r\n\r\n                        <Tab component={NavLink} className=\"tabs__link\"\r\n                            to='/pastepage'\r\n                            label={<span className=\"caption caption--size_4\">Paste</span>} value={'/pastepage'} />\r\n                    </Tabs>\r\n                    {children}\r\n                </AppBar>\r\n\r\n            </div>\r\n        </Container>\r\n    )\r\n}","export const COPYITEM = 'COPYITEM'\r\nexport const PASTEITEM = 'PASTEITEM'\r\nexport const UPDATEGRID = 'UPDATEGRID'","import { COPYITEM, PASTEITEM, UPDATEGRID } from './GridPropTypes'\r\n\r\n\r\n\r\nconst handlers = {\r\n    [COPYITEM]: (gridState, { payload }) => ({\r\n        ...gridState,\r\n        copyGrid: gridState.copyGrid.map(arr => {\r\n            return arr.map(item => {\r\n                if (item === payload) {\r\n                    item.clicked = true;\r\n                } else {\r\n                    if (item.clicked) item.clicked = false;\r\n                }\r\n                return item\r\n            })\r\n        }),\r\n        pasteGrid: gridState.pasteGrid.length === 0 ? gridState.copyGrid : gridState.pasteGrid,\r\n        curValue: payload\r\n    }),\r\n\r\n    [PASTEITEM]: (gridState, { payload }) => ({\r\n        ...gridState,\r\n\r\n        copyGrid: gridState.copyGrid.map(arr => {\r\n            return arr.map(item => {\r\n                if (item === payload && payload === gridState.curValue) {\r\n                    return 0\r\n                } else { return item }\r\n            })\r\n        }),\r\n        curValue: payload === gridState.curValue ? {} : gridState.curValue\r\n    }),\r\n\r\n    [UPDATEGRID]: (gridState, { payload }) => ({\r\n        ...gridState,\r\n        copyGrid: payload,\r\n        pasteGrid: [],\r\n        curValue: {}\r\n    }),\r\n\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const gridReducer = (gridState, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(gridState, action)\r\n}","export const generateMatrix = (count) => {\r\n    return Array.from({ length: count },\r\n        () => new Array(count).fill({}));\r\n}\r\n\r\n\r\n\r\n","export const randomColor = () => `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n\r\nexport const randomId = () => Math.random().toString(36).substring(7);\r\n\r\nexport const randomDegree = (angle = [90, 180, 270, 360, 450, 540, -90]) => angle[Math.floor(Math.random() * angle.length)]\r\n\r\n\r\n\r\n","import React, { useReducer, createContext, useState } from \"react\";\r\nimport { gridReducer } from './GridReducer'\r\nimport { COPYITEM, PASTEITEM, UPDATEGRID } from './GridPropTypes'\r\nimport { generateMatrix } from '../../Utils/ArrConvertor'\r\nimport { randomColor, randomId } from '../../Utils/Randomizer'\r\n\r\n\r\nexport const GridContext = createContext();\r\n\r\n\r\nexport const GridContextProvider = ({ children }) => {\r\n\r\n\r\n    const assignObjects = (matrix) => {\r\n        return matrix.map(value => {\r\n            return value.map(() => {\r\n                return {\r\n                    id: randomId(),\r\n                    color: randomColor(),\r\n                    clicked: false\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    const [dif, setDif] = useState(5)\r\n\r\n    const initialState = {\r\n        copyGrid: assignObjects(generateMatrix(dif)),\r\n        pasteGrid: [],\r\n        curValue: {},\r\n    }\r\n    const [state, dispatch] = useReducer(gridReducer, initialState)\r\n\r\n\r\n    const action = (sign) => {\r\n        if (sign === '+') {\r\n            if (dif < 10) {\r\n                setDif(dif + 1)\r\n                dispatch({ type: UPDATEGRID, payload: assignObjects(generateMatrix(dif + 1)) })\r\n            }\r\n        }\r\n        if (sign === '-') {\r\n            if (dif > 3) {\r\n                setDif(dif - 1)\r\n                dispatch({ type: UPDATEGRID, payload: assignObjects(generateMatrix(dif - 1)) })\r\n            }\r\n        }\r\n        if (sign === 'reset') {\r\n            setDif(dif)\r\n            dispatch({ type: UPDATEGRID, payload: assignObjects(generateMatrix(dif)) })\r\n            setLifes(3)\r\n            setRotate(false)\r\n        }\r\n        return sign\r\n    }\r\n\r\n\r\n    const [rotate, setRotate] = useState(false);\r\n    const handleChange = (event) => {\r\n        setRotate(event.target.checked)\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    const copyItem = (item) => {\r\n        dispatch({ type: COPYITEM, payload: item })\r\n    }\r\n\r\n    const pasteItem = (item) => {\r\n        dispatch({ type: PASTEITEM, payload: item })\r\n    }\r\n\r\n\r\n    const [lifes, setLifes] = useState(3)\r\n\r\n    const lifeChanger = (sign) => {\r\n        if (sign === '+') {\r\n            if (lifes < 7) {\r\n                setLifes(lifes + 1)\r\n            }\r\n        }\r\n        if (sign === '-') {\r\n            if (lifes > 0) {\r\n                setLifes(lifes - 1)\r\n            }\r\n        }\r\n        return sign\r\n    }\r\n\r\n    return (\r\n        <GridContext.Provider value={{\r\n            grid: state,\r\n            copyItem,\r\n            pasteItem,\r\n            dif,\r\n            action,\r\n            rotate,\r\n            handleChange,\r\n            lifes, lifeChanger\r\n        }}>\r\n            {children}\r\n        </GridContext.Provider>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Container } from '@material-ui/core';\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\n\r\n\r\n\r\n\r\nexport const LifeDisplay = () => {\r\n\r\n    const { lifes } = useContext(GridContext)\r\n\r\n    const createArr = (leng) => {\r\n        let arr = [];\r\n        for (let i = 0; i < leng; i++) {\r\n            arr.push(i);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className='card'>\r\n                <h2 className=\"caption caption--size_4\">Lifes: </h2>\r\n                {createArr(lifes).map(life =>\r\n                    <span key={life} className=\"caption caption--size_3\">&#128153;</span>\r\n                )}\r\n            </div>\r\n        </Container>\r\n\r\n    );\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { IconButton } from '@material-ui/core';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\n\r\n\r\nexport const DifficultControl = () => {\r\n\r\n    const { dif, action } = useContext(GridContext)\r\n\r\n    return (\r\n        <div className='difficult'>\r\n            <h1 className=\"caption caption--size_4\">Difficult (max. 10) - <b>{dif}</b></h1>\r\n            <IconButton color=\"primary\" onClick={() => action('-')} >\r\n                <RemoveIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton color=\"primary\" onClick={() => action('+')}>\r\n                <AddIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { Switch } from '@material-ui/core';\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\n\r\n\r\n\r\n\r\nexport const Switcher = () => {\r\n\r\n    const { rotate, handleChange } = useContext(GridContext)\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='switcher'>\r\n            <h1 className=\"caption caption--size_4\">Rotate</h1>\r\n            <Switch\r\n                checked={rotate}\r\n                onChange={handleChange}\r\n                color=\"primary\"\r\n                inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react'\r\n\r\nimport { IconButton } from '@material-ui/core';\r\n\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\n\r\n\r\nexport const LifeControl = () => {\r\n\r\n    const { lifeChanger } = useContext(GridContext)\r\n\r\n    return (\r\n        <div className='lifes'>\r\n            <h1 className=\"caption caption--size_4\"> Set lifes</h1>\r\n            <IconButton color=\"primary\" onClick={() => lifeChanger('-')} >\r\n                <RemoveIcon fontSize=\"small\" />\r\n            </IconButton>\r\n            <IconButton color=\"primary\" onClick={() => lifeChanger('+')}>\r\n                <AddIcon fontSize=\"small\" />\r\n            </IconButton>\r\n        </div>\r\n    );\r\n}","export const TIMER = 'TIMER'\r\nexport const START = 'START'\r\n\r\nexport const RESET = 'RESET'\r\nconst handlers = {\r\n    [TIMER]: (timerState, { payload }) => ({\r\n        ...timerState,\r\n        timer: timerState.timer + payload,\r\n    }),\r\n    [START]: (timerState) => ({\r\n        ...timerState, start: true\r\n    }),\r\n    [RESET]: (timerState) => ({\r\n        ...timerState, timer: 0, start: false\r\n    }),\r\n\r\n\r\n    DEFAULT: state => state\r\n}\r\n\r\nexport const timerReducer = (timerState, action) => {\r\n    const handle = handlers[action.type] || handlers.DEFAULT\r\n    return handle(timerState, action)\r\n}","import React, { useReducer, useRef } from \"react\";\r\nimport { timerReducer, TIMER, START, RESET } from './TimerReducer'\r\n\r\nexport const TimerContext = React.createContext();\r\n\r\nexport const TimerContextProvider = ({ children }) => {\r\n    const increment = useRef(null);\r\n\r\n    const initialTimerState = {\r\n        timer: 0,\r\n        start: false,\r\n    }\r\n    const [timerState, dispatch] = useReducer(timerReducer, initialTimerState)\r\n    const formatTime = () => {\r\n        const getSeconds = `0${(timerState.timer % 60)}`.slice(-2)\r\n        const minutes = `${Math.floor(timerState.timer / 60)}`\r\n        const getMinutes = `0${minutes % 60}`.slice(-2)\r\n        const getHours = `0${Math.floor(timerState.timer / 3600)}`.slice(-2)\r\n        return `${getHours} : ${getMinutes} : ${getSeconds}`\r\n    }\r\n\r\n    const startWatch = () => {\r\n\r\n        if (!timerState.start) {\r\n            dispatch({ type: START })\r\n            increment.current = setInterval(() => {\r\n                dispatch({\r\n                    type: TIMER,\r\n                    payload: 1\r\n                })\r\n            }, 1000)\r\n        }\r\n    }\r\n\r\n    const resetWatch = () => {\r\n        clearInterval(increment.current)\r\n        dispatch({\r\n            type: RESET,\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <TimerContext.Provider value={{\r\n            timerState: timerState,\r\n            formatTime: formatTime,\r\n            startWatch: startWatch,\r\n            resetWatch: resetWatch,\r\n            start: timerState.start\r\n        }}>\r\n            {children}\r\n        </TimerContext.Provider>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { IconButton, Menu, MenuItem } from '@material-ui/core';\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { DifficultControl } from './DifficultControl';\r\nimport { Switcher } from './Switcher';\r\nimport { LifeControl } from './LifeControl';\r\n\r\nimport { GridContext } from '../contexts/GridContext/GridProvider';\r\nimport { TimerContext } from \"../contexts/TimerContext/TimerProvider\";\r\n\r\n\r\nexport const Settings = () => {\r\n    const { grid } = useContext(GridContext)\r\n    const { start } = useContext(TimerContext)\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div className='dots'>\r\n            <IconButton\r\n                aria-label=\"more\"\r\n                aria-controls=\"menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n                disabled={grid.pasteGrid.length === 0 && !start ? false : true}\r\n            >\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n            <Menu\r\n                id=\"menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={open}\r\n                onClose={handleClose}\r\n                PaperProps={{\r\n                    style: {\r\n                        width: '40ch',\r\n                    },\r\n                }}\r\n            >\r\n                <MenuItem >\r\n                    <DifficultControl />\r\n                </MenuItem>\r\n                <MenuItem >\r\n                    <Switcher />\r\n                </MenuItem>\r\n                <MenuItem >\r\n                    <LifeControl />\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n}","import React, { useContext } from 'react'\r\nimport { TimerContext } from \"../contexts/TimerContext/TimerProvider\";\r\n\r\n\r\n\r\n\r\n\r\nexport const TimerDisplay = () => {\r\n    const { formatTime } = useContext(TimerContext)\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"timer__display\">\r\n            <h1 className=\"caption caption--align_center caption--size_3\">{formatTime()}</h1>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React, { useContext } from 'react'\r\nimport { TimerContext } from \"../contexts/TimerContext/TimerProvider\";\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\n\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n\r\n\r\n\r\nexport const TimerControl = () => {\r\n    const { startWatch, resetWatch } = useContext(TimerContext)\r\n    const { action } = useContext(GridContext)\r\n    return (\r\n        <div className=\"timer__control\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => { startWatch() }} >\r\n                Start\r\n            </Button>\r\n            <Button variant=\"contained\" color=\"secondary\" onClick={() => {\r\n                resetWatch()\r\n                action('reset')\r\n            }} >\r\n                Stop\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport { Container } from '@material-ui/core';\r\nimport { TimerDisplay } from './TimerDisplay';\r\nimport { TimerControl } from './TimerControl';\r\n\r\n\r\n\r\n\r\nexport const Timer = () => {\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <div className=\"timer\">\r\n                <TimerDisplay />\r\n                <TimerControl />\r\n            </div>\r\n\r\n        </Container>\r\n\r\n    );\r\n}","import React, { useContext } from 'react'\r\nimport { Container, Grid, Button } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\nimport { TimerContext } from \"../contexts/TimerContext/TimerProvider\";\r\n\r\n\r\nexport const CopyGrid = () => {\r\n    const { startWatch, start } = useContext(TimerContext)\r\n    const { grid, copyItem, lifeChanger, lifes } = useContext(GridContext)\r\n\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container className=\"grid\" wrap=\"nowrap\">\r\n                <Grid className=\"grid__box\" >\r\n                    <ArrowUpwardIcon color=\"primary\" fontSize=\"large\" />\r\n                    {grid.copyGrid.map((item, index) => (\r\n                        <Grid container className=\"grid__row\" wrap=\"nowrap\" key={index}>\r\n                            {item.map((value, i) => (\r\n                                <Grid key={i} item className=\"grid__column\">\r\n                                    <Button\r\n                                        variant=\"outlined\"\r\n                                        style={{ background: `${value.color}` }}\r\n                                        disabled={value && lifes ? value.clicked : true}\r\n                                        onClick={() => {\r\n                                            copyItem(value)\r\n                                            if (grid.pasteGrid.length === 0 && !start) startWatch()\r\n                                            if (grid.curValue.id) { lifeChanger('-') }\r\n\r\n                                        }}\r\n                                        className=\"grid__button\"\r\n                                    >Copy</Button>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { CopyGrid } from '../components/CopyGrid'\r\n\r\n\r\n\r\nexport const CopyPage = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <CopyGrid />\r\n        </Fragment>\r\n\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { Container, Grid, Button } from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport { GridContext } from '../contexts/GridContext/GridProvider'\r\nimport { randomDegree } from '../Utils/Randomizer'\r\n\r\nexport const PasteGrid = () => {\r\n\r\n    const { grid, pasteItem, rotate, lifeChanger, lifes } = useContext(GridContext)\r\n\r\n    console.log(grid)\r\n\r\n\r\n    return (\r\n        <Container maxWidth=\"md\">\r\n            <Grid container className=\"grid\" wrap=\"nowrap\" >\r\n                <Grid className='grid__box' style={rotate ? { transform: `rotate(${randomDegree()}deg)` } : { transform: `rotate(0deg)` }}>\r\n                    <ArrowUpwardIcon color=\"primary\" fontSize=\"large\" />\r\n                    {grid.copyGrid.map((item, index) => (\r\n                        <Grid container className=\"grid__row\" wrap=\"nowrap\" key={index}>\r\n                            {item.map((value, i) => (\r\n                                <Grid key={i} item className=\"grid__column\">\r\n                                    <Button variant=\"outlined\"\r\n                                        size=\"small\"\r\n                                        style={value ? { background: `default` } : { background: `${grid.pasteGrid[index][i].color}` }}\r\n                                        disabled={lifes === 0}\r\n                                        onClick={() => {\r\n                                            pasteItem(value)\r\n                                            if (value !== grid.curValue && grid.pasteGrid.length !== 0) { lifeChanger('-') }\r\n                                        }}\r\n                                        className=\"grid__button\"\r\n                                    ><span style={rotate ? { transform: `rotate(${randomDegree()}deg)` } : { transform: `rotate(0deg)` }}>Paste</span></Button>\r\n                                </Grid>\r\n                            ))}\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Grid>\r\n        </Container >\r\n    )\r\n}\r\n\r\n","import React, { Fragment } from 'react'\r\nimport { PasteGrid } from '../components/PasteGrid'\r\n\r\n\r\n\r\nexport const PastePage = () => {\r\n\r\n\r\n\r\n    return (\r\n        <Fragment>\r\n            <PasteGrid />\r\n        </Fragment>\r\n\r\n    )\r\n}","import React from 'react';\n\n\nimport { BrowserRouter, Route } from 'react-router-dom'\n\n\nimport { Header } from './components/Header';\nimport { LifeDisplay } from './components/LifeDisplay';\nimport { Settings } from './components/Settings';\nimport { Timer } from './components/Timer';\nimport { GridContextProvider } from './contexts/GridContext/GridProvider';\nimport { TimerContextProvider } from './contexts/TimerContext/TimerProvider';\nimport { CopyPage } from './pages/CopyPage'\nimport { PastePage } from './pages/PastePage'\nimport './sass/App.sass';\n\n\nimport SwipeableRoutes from \"react-swipeable-routes\";\n\n\nfunction App() {\n\n  return (\n\n\n    <div className='App'>\n\n      <GridContextProvider>\n        <TimerContextProvider>\n          <BrowserRouter>\n            <Header>\n              <Settings />\n            </Header>\n            <LifeDisplay />\n            <Timer />\n            <SwipeableRoutes>\n\n              <Route path={'/copy-paste-game'} exact component={CopyPage} />\n              <Route path={'/pastepage'} component={PastePage} />\n\n\n            </SwipeableRoutes>\n\n\n          </BrowserRouter>\n        </TimerContextProvider>\n      </GridContextProvider>\n\n\n\n\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}